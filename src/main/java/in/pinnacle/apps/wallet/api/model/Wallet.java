package in.pinnacle.apps.wallet.api.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.io.Serial;
import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

/**
 * Entity class which represents wallet in the application
 *
 * @author Saivarma Akarapu
 */
@Data
@Entity
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "wallet")
public class Wallet implements Serializable {

    /**
     * Serial version UID for serialization and deserialization
     */
    @Serial
    private static final long serialVersionUID = 938188764288853868L;

    /**
     * Unique identifier of the wallet master which will be generated by table
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "wallet_id")
    private Long walletId;

    /**
     * User ID which this wallet belongs to
     */
    @NotNull
    @Column(name = "user_id", nullable = false)
    private Long userId;

    /**
     * Currency of the amount which this wallet holds
     */
    @NotBlank
    @Column(name = "currency", length = 3, nullable = false)
    private String currency;

    /**
     * Type of the wallet probably pre-paid or post paid
     */
    @NotBlank
    @Column(name = "wallet_type", length = 10, nullable = false)
    private String walletType;

    /**
     * Amount that was available in this wallet
     */
    @NotNull
    @Column(name = "balance", nullable = false)
    private BigDecimal balance;

    /**
     * Status of the wallet to know whether it is active or not
     */
    @NotNull
    @Column(name = "is_active", nullable = false)
    private Boolean isActive;

    /**
     * Date at which the wallet has been created
     */
    @NotNull
    @Column(name = "created_at", nullable = false)
    private LocalDateTime createdAt;

    /**
     * Date at which the wallet has been last modified
     */
    @NotNull
    @Column(name = "modified_at", nullable = false)
    private LocalDateTime modifiedAt;

}
